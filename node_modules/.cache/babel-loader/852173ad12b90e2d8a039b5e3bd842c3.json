{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport API_KEY from './key';\nconst CONTEXT_KEY = \"a35a8bc65c64f438d\";\n\nconst useGoogleSearch = term => {\n  _s();\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      fetch(`https://www.googleapis.com/customsearch/                v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`).then(response => response.json()).then(result => {\n        setData(result);\n      });\n    };\n\n    fetchData();\n  }, [term]);\n  return {\n    data\n  };\n};\n\n_s(useGoogleSearch, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\nexport default useGoogleSearch;","map":{"version":3,"sources":["C:/Users/18281/OneDrive/Desktop/Google_Clone/google-clone/src/useGoogleSearch.js"],"names":["React","useState","useEffect","API_KEY","CONTEXT_KEY","useGoogleSearch","term","data","setData","fetchData","fetch","then","response","json","result"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA,MAAMC,WAAW,GAAG,mBAApB;;AAEA,MAAMC,eAAe,GAAIC,IAAD,IAAU;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,SAAS,GAAG,YAAW;AACzBC,MAAAA,KAAK,CACA,kEAAiEP,OAAQ,OAAMC,WAAY,MAAKE,IAAK,EADrG,CAAL,CAGCK,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIMG,MAAM,IAAI;AACZN,QAAAA,OAAO,CAACM,MAAD,CAAP;AACH,OAND;AAOH,KARD;;AAUAL,IAAAA,SAAS;AAEZ,GAbQ,EAaN,CAACH,IAAD,CAbM,CAAT;AAeA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AAEH,CApBD;;GAAMF,e;;AAsBN,eAAeA,eAAf","sourcesContent":["import React, {useState,useEffect} from 'react'\r\nimport API_KEY from './key';\r\n\r\nconst CONTEXT_KEY = \"a35a8bc65c64f438d\";\r\n\r\nconst useGoogleSearch = (term) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            fetch(\r\n                `https://www.googleapis.com/customsearch/                v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n            )\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setData(result)\r\n            })\r\n        }\r\n\r\n        fetchData();\r\n\r\n    }, [term])\r\n\r\n    return { data }\r\n    \r\n}\r\n\r\nexport default useGoogleSearch\r\n"]},"metadata":{},"sourceType":"module"}