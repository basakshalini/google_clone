{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18281\\\\OneDrive\\\\Desktop\\\\Google_Clone\\\\google-clone\\\\src\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Search.css';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { useStateValue } from './StateProvider';\nimport { actionTypes } from \"./reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search({\n  hideButtons = false\n}) {\n  _s();\n\n  const [{}, dispatch] = useStateValue();\n  const [input, setInput] = useState(\"\");\n  const history = useHistory();\n\n  const search = e => {\n    e.preventDefault();\n    console.log('hit search >>', input);\n    dispatch({\n      type: actionTypes.SET_SEARCH_TERM,\n      term: input\n    });\n    history.push('/search');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search__input\",\n      children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n        className: \"search__inputIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), !hideButtons ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: search,\n        variant: \"outlined\",\n        children: \"Google Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        children: \"I'm Feeling Lucky\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"search__buttonsHidden\",\n        type: \"submit\",\n        onClick: search,\n        variant: \"outlined\",\n        children: \"Google Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"search__buttonsHidden\",\n        variant: \"outlined\",\n        children: \"I'm Feeling Lucky\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"8qS2SlhTZwSH6e9bczDyfmbviiQ=\", false, function () {\n  return [useStateValue, useHistory];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/18281/OneDrive/Desktop/Google_Clone/google-clone/src/Search.js"],"names":["React","useState","SearchIcon","MicIcon","Button","useHistory","useStateValue","actionTypes","Search","hideButtons","dispatch","input","setInput","history","search","e","preventDefault","console","log","type","SET_SEARCH_TERM","term","push","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,WAAT,QAA4B,WAA5B;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,WAAW,GAAG;AAAhB,CAAhB,EAAwC;AAAA;;AACpC,QAAM,CAAC,EAAD,EAAKC,QAAL,IAAiBJ,aAAa,EAApC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,OAAO,GAAGR,UAAU,EAA1B;;AACA,QAAMS,MAAM,GAAGC,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,KAA7B;AAEAD,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEZ,WAAW,CAACa,eADb;AAELC,MAAAA,IAAI,EAAEV;AAFD,KAAD,CAAR;AAKAE,IAAAA,OAAO,CAACS,IAAR,CAAa,SAAb;AACH,GAVD;;AAWA,sBACI;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,KAAK,EAAEX,KAAd;AAAqB,QAAA,QAAQ,EAAEI,CAAC,IAAIH,QAAQ,CAACG,CAAC,CAACQ,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAMK,CAACf,WAAD,gBACG;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEK,MAA/B;AAAwC,QAAA,OAAO,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAOG;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,IAAI,EAAC,QAA/C;AAAwD,QAAA,OAAO,EAAEA,MAAjE;AAA0E,QAAA,OAAO,EAAC,UAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GArCQN,M;UACkBF,a,EAEPD,U;;;KAHXG,M;AAuCT,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport './Search.css';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from \"./reducer\";\r\n\r\nfunction Search({ hideButtons = false}) {\r\n    const [{}, dispatch] = useStateValue();\r\n    const [input, setInput] = useState(\"\");\r\n    const history = useHistory();\r\n    const search = e => {\r\n        e.preventDefault();\r\n        console.log('hit search >>', input);\r\n\r\n        dispatch({\r\n            type: actionTypes.SET_SEARCH_TERM,\r\n            term: input,\r\n        })\r\n\r\n        history.push('/search')\r\n    }\r\n    return (\r\n        <form className='search'>\r\n            <div className='search__input'>\r\n                <SearchIcon className='search__inputIcon'/>\r\n                <input value={input} onChange={e => setInput(e.target.value)}/>\r\n                <MicIcon />\r\n            </div>\r\n            {!hideButtons ? (\r\n                <div className=\"search__buttons\">\r\n                <Button type='submit' onClick={search}  variant=\"outlined\">Google Search</Button>\r\n                <Button variant=\"outlined\">I'm Feeling Lucky</Button>\r\n            </div>\r\n\r\n            ) : (\r\n                <div className=\"search__buttons\">\r\n                <Button className=\"search__buttonsHidden\" type='submit' onClick={search}  variant=\"outlined\">Google Search</Button>\r\n                <Button className=\"search__buttonsHidden\" variant=\"outlined\">I'm Feeling Lucky</Button>\r\n            </div>\r\n            )}\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n"]},"metadata":{},"sourceType":"module"}