{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/18281/OneDrive/Desktop/Google_Clone/google-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/18281/OneDrive/Desktop/Google_Clone/google-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/18281/OneDrive/Desktop/Google_Clone/google-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import API_KEY from'./key';var CONTEXT_KEY=\"a35a8bc65c64f438d\";var useGoogleSearch=function useGoogleSearch(term){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fetch(\"https://www.googleapis.com/customsearch/v1?key=\".concat(API_KEY,\"&cx=\").concat(CONTEXT_KEY,\"&q=\").concat(term)).then(function(response){return response.json();}).then(function(result){setData(result);});case 1:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[term]);return{data:data};};export default useGoogleSearch;","map":{"version":3,"sources":["C:/Users/18281/OneDrive/Desktop/Google_Clone/google-clone/src/useGoogleSearch.js"],"names":["React","useState","useEffect","API_KEY","CONTEXT_KEY","useGoogleSearch","term","data","setData","fetchData","fetch","then","response","json","result"],"mappings":"6gBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAwBC,SAAxB,KAAwC,OAAxC,CACA,MAAOC,CAAAA,OAAP,KAAoB,OAApB,CAEA,GAAMC,CAAAA,WAAW,CAAG,mBAApB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAU,CAC9B,cAAwBL,QAAQ,CAAC,IAAD,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eAEAN,SAAS,CAAC,UAAM,CACZ,GAAMO,CAAAA,SAAS,0FAAG,mIACdC,KAAK,0DACiDP,OADjD,gBAC+DC,WAD/D,eACgFE,IADhF,EAAL,CAGCK,IAHD,CAGM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAHd,EAICF,IAJD,CAIM,SAAAG,MAAM,CAAI,CACZN,OAAO,CAACM,MAAD,CAAP,CACH,CAND,EADc,sDAAH,kBAATL,CAAAA,SAAS,0CAAf,CAUAA,SAAS,GAEZ,CAbQ,CAaN,CAACH,IAAD,CAbM,CAAT,CAeA,MAAO,CAAEC,IAAI,CAAJA,IAAF,CAAP,CAEH,CApBD,CAsBA,cAAeF,CAAAA,eAAf","sourcesContent":["import React, {useState,useEffect} from 'react'\r\nimport API_KEY from './key';\r\n\r\nconst CONTEXT_KEY = \"a35a8bc65c64f438d\";\r\n\r\nconst useGoogleSearch = (term) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            fetch(\r\n                `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n            )\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setData(result)\r\n            })\r\n        }\r\n\r\n        fetchData();\r\n\r\n    }, [term])\r\n\r\n    return { data }\r\n    \r\n}\r\n\r\nexport default useGoogleSearch\r\n"]},"metadata":{},"sourceType":"module"}